apply plugin: 'com.android.application'

android {

	signingConfigs {
		debug {
		}
		release {
		}
	}

	defaultConfig {
		applicationId rootProject.ext.applicationId
		minSdkVersion rootProject.ext.minSdkVersion
		targetSdkVersion rootProject.ext.targetSdkVersion
		versionCode rootProject.ext.versionCode
		versionName rootProject.ext.versionName

		multiDexEnabled true

		manifestPlaceholders = [
				JPUSH_PKGNAME : applicationId,
				JPUSH_APPKEY : "",     // JPush的key.
				JPUSH_CHANNEL: "",
		]
	}
	buildTypes {

		debug {
			buildConfigField "boolean", "LOG_DEBUG", "true"
			debuggable true
			minifyEnabled false
			signingConfig signingConfigs.debug
		}

		release {
			buildConfigField "boolean", "LOG_DEBUG", "false"
			debuggable false
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release

//			applicationVariants.all { variant ->
//				variant.outputs.each { output ->
//					def outputFile = output.outputFile
//					if (outputFile != null && outputFile.name.endsWith('.apk')) {
//						def fileName = "少儿网络助手_${rootProject.ext.versionName}_${variant.productFlavors[0].name}.apk"
//						output.outputFile = new File(outputFile.parent, fileName)
//					}
//				}
//			}
		}
	}
}

File propFile = file("sign.properties");
if (propFile.exists()) {
	def Properties props = new Properties();
	props.load(new FileInputStream(propFile));

	if (props.containsKey('keyAlias') && props.containsKey('keyPassword') &&
			props.containsKey('storeFile') && props.containsKey('storePassword')) {
		android.signingConfigs {
			debug {
				keyAlias props.get('keyAlias')
				keyPassword props.get('keyPassword')
				storeFile file(props.get('storeFile'))
				storePassword props.get('storePassword')
			}
			release {
				keyAlias props.get('keyAlias')
				keyPassword props.get('keyPassword')
				storeFile file(props.get('storeFile'))
				storePassword props.get('storePassword')
			}
		}
	} else {
		android.buildTypes.release.signingConfig = null
	}
} else {
	android.buildTypes.release.signingConfig = null
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	testCompile 'junit:junit:4.12'
	compile 'com.android.support:appcompat-v7:23.1.0'
	compile 'de.greenrobot:eventbus:2.4.0'
	//检查内存泄露状况
	debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
	compile 'com.nineoldandroids:library:2.4.0'
	compile 'com.android.support:design:23.1.0'

	compile 'me.relex:circleindicator:1.1.8@aar'

	compile 'com.squareup.okhttp3:okhttp:3.11.0'

	compile 'cn.jiguang.sdk:jpush:3.1.5'  // 此处以JPush 3.1.5 版本为例。
	compile 'cn.jiguang.sdk:jcore:1.2.3'  // 此处以JCore 1.2.3 版本为例。
}
